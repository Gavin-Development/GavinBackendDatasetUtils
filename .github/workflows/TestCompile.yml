name: C/C++ CI

on:
  push:
    branches:
      - cmake
  pull_request:
    branches:
      - cmake
  schedule:
    - cron: "* */12 * * *"
jobs:
  build:
    strategy:
      fail-fast: false
      matrix:
        config:
          - {
            name: "Windows Latest MSVC",
            os: windows-latest,
            artifact: "windows_msvc.7z",
            build_type: "Release",
            cc: "cl",
            cxx: "cl",
            environment_script: "C:/Program Files (x86)/Microsoft Visual Studio/2019/Enterprise/VC/Auxiliary/Build/vcvars64.bat",
            archiver: "7z a",
            generators: "Visual Studio 16 2019"
          }
          - {
            name: "Ubuntu_Latest_GCC",
            os: ubuntu-latest,
            artifact: "ubuntu_gcc.7z",
            build_type: "Release",
            cc: "gcc",
            cxx: "g++",
            archiver: "7z a",
            generators: "Ninja"
          }
    runs-on: ${{ matrix.config.os }}
    steps:
    - uses: actions/checkout@v2
      with:
        ref: cmake
    - name: Print enviroment
      run: |
        echo github.event.action: ${{ github.event.action }}
        echo github.event_name: ${{ github.event_name }}
    - name: Install dependicies on windows
      if: startsWith(matrix.config.os, 'windows')
      run: |
        choco install ninja cmake
        choco install python --version=3.8.0
        ninja --version
        cmake --version
        python --version
    - name: Install dependencies on ubuntu
      if: startsWith(matrix.config.name, 'Ubuntu_Latest_GCC')
      run: |
        sudo apt-get update -y
        sudo apt-get install -y ninja-build cmake python3.8
        ninja --version
        cmake --version
        gcc --version
        python --version
    - name: Configure
      shell: bash
      run: |
        mkdir build
        mkdir instdir
        cmake \
          -S . \
          -B . \
          -DCMAKE_BUILD_TYPE=${{ matrix.config.build_type }} \
          -G "${{ matrix.config.generators }}" \
          -DCMAKE_INSTALL_PREFIX:PATH=instdir
    - name: Build
      shell: bash
      run: cmake --build . --config ${{ matrix.config.build_type }}
    - name: Install Strip
      shell: bash
      run: cmake --install . --strip
